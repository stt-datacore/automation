name: Sync new crew
on:
  workflow_dispatch:
    inputs:
      ONLY_SYNC_NEW_CREW:
        description: 'Only sync if there are new crew'
        required: true
        default: true
env:
  PLAYER_EN_USERNAME: ${{ secrets.PLAYER_EN_USERNAME }}
  PLAYER_EN_PASSWORD: ${{ secrets.PLAYER_EN_PASSWORD }}
  PLAYER_FR_USERNAME: ${{ secrets.PLAYER_FR_USERNAME }}
  PLAYER_FR_PASSWORD: ${{ secrets.PLAYER_FR_PASSWORD }}
  PLAYER_DE_USERNAME: ${{ secrets.PLAYER_DE_USERNAME }}
  PLAYER_DE_PASSWORD: ${{ secrets.PLAYER_DE_PASSWORD }}
  PLAYER_SP_USERNAME: ${{ secrets.PLAYER_SP_USERNAME }}
  PLAYER_SP_PASSWORD: ${{ secrets.PLAYER_SP_PASSWORD }}
  GOOGLE_API_KEY: ${{ secrets.GOOGLE_API_KEY }}
  GOOGLE_API_KEY_2: ${{ secrets.GOOGLE_API_KEY_2 }}
  GOOGLE_CLIENT_ID: ${{ secrets.GOOGLE_CLIENT_ID }}
  GOOGLE_CLIENT_SECRET: ${{ secrets.GOOGLE_CLIENT_SECRET }}
  GUILD_ID: ${{ secrets.GUILD_ID }}
  GDOCS_TOKEN: ${{ secrets.GDOCS_TOKEN }}
  EXIT_IF_NO_NEW_CREW: ${{ github.event.inputs.ONLY_SYNC_NEW_CREW }}
jobs:
  # Checkout all repos
  Sync-New-Crew:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout website
        uses: actions/checkout@v2
        with:
          repository: stt-datacore/website
          token: ${{ secrets.GH_ACCESS_TOKEN }}
          path: website

      - name: Checkout scripts
        uses: actions/checkout@v2
        with:
          repository: stt-datacore/scripts
          token: ${{ secrets.GH_ACCESS_TOKEN }}
          path: scripts

      - name: Checkout zhatvash
        uses: actions/checkout@v2
        with:
          repository: ineffyble/zhatvash
          token: ${{ secrets.GH_ACCESS_TOKEN }}
          path: scripts/zhatvash

      - name: List files in the repository
        run: |
          ls ${{ github.workspace }}

      - name: Scripts - npm install
        run: npm ci
        working-directory: scripts

      - name: Scripts - parseallcrew.js
        id: parseallcrew
        run: node parseallcrew.js
        working-directory: scripts

      - name: Check if there are changes to website
        id: changes
        run: |
          if [[ `git status --porcelain` ]]; then
            echo "::set-output name=changes::true"
          else
            echo "::set-output name=changes::false"
          fi
        working-directory: website

      - name: Website - npm install, node precalculate
        if: ${{ steps.changes.outputs.changes == 'true' }}
        run: |
          npm ci
          node precalculate.js
        working-directory: website
  # Website precalculate, runs after scripts tasks if crew change detected
  # Commit all changes to respective repos and push